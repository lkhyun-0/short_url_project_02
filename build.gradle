plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation("org.hibernate.orm:hibernate-core:6.6.5.Final") // 최신 버전
    implementation("jakarta.persistence:jakarta.persistence-api:3.1.0") // 버전 맞추기

    implementation 'org.springframework.boot:spring-boot-starter-actuator'      // 컨테이너 교체 시기 체크하는 놈
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'    // 세션 임시저장 해주는 놈 !
    implementation 'org.springframework.session:spring-session-data-redis'

}

tasks.named('test') {
    useJUnitPlatform()
}
